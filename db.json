{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/apollo/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/apollo/source/css/apollo.css","path":"css/apollo.css","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff","path":"font/sourcesanspro.woff","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","path":"font/sourcesanspro.woff2","modified":1,"renderable":1},{"_id":"themes/apollo/source/scss/apollo.scss","path":"scss/apollo.scss","modified":1,"renderable":1}],"Cache":[{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1487648671000},{"_id":"themes/apollo/README.md","hash":"201c76d030a98578ed5a6ad5c766a7bde91c32d3","modified":1487648671000},{"_id":"themes/apollo/_config.yml","hash":"900bb42d9bcbba2b0347e5aa73081165c1d29a58","modified":1487648671000},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1487648671000},{"_id":"themes/apollo/source/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1487648671000},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"9e4b03e14c094000257ea254fd660dde4c7af63c","modified":1487648671000},{"_id":"themes/apollo/languages/en.yml","hash":"40292f2a48e4e6361132033a47c516cb33127b6c","modified":1487648671000},{"_id":"themes/apollo/package.json","hash":"eb1e76ec0b7ed6c6c7b2bd32b4f1e1bbe15800ca","modified":1487648671000},{"_id":"themes/apollo/doc/doc-en.md","hash":"d6d9756b2085cdd8ee51eb5594427e2abf170e94","modified":1487648671000},{"_id":"themes/apollo/doc/doc-zh.md","hash":"d43c1f6bff66426744a2c6f031d19ff09cdeb2d1","modified":1487648671000},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1487648671000},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1487648671000},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1487648671000},{"_id":"source/_posts/使用Flask－Mail发送qq邮件.md","hash":"a6a3d447391495e89c46719b47ddc974b7f4e11e","modified":1487732779000},{"_id":"source/_posts/Git打Tag的命令.md","hash":"4ef341e1d355edd65408c16cf2a424521c64c005","modified":1487658151000},{"_id":"source/_posts/多个电脑共同维护一个hexo的方法.md","hash":"9767b2cf28457389e91fb6f9fb5710b3c9f782d3","modified":1487658748000},{"_id":"themes/apollo/source/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1487648671000},{"_id":"themes/apollo/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1487648671000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1487648671000},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1487648671000},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1487648671000},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1487648671000},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"cd9447e9b0ad22213e6a17d9a9b948f9f998f921","modified":1487648671000},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"ff0a2c269c2434da2ac5529872f1d6184a71f96d","modified":1487648671000},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"217f8b17054e5079f2d30bb7e2e4e36c0f2161b7","modified":1487648671000},{"_id":"themes/apollo/layout/partial/head.jade","hash":"43d2db73f0247a9a3ed00ecb95b537a872b7201a","modified":1487648671000},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"529c2ec06cfbc3d5b6d66dd320db50dfab5577a6","modified":1487648671000},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1487648671000},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"6bff591ae3d1ff6750f239c4c933ad61f009f36a","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"ae967b2049ecb9b8c4e139ecce32fd9fb5358ac5","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"153bde88bf8ffeae4ffd813d8cc694dd83d33d94","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"6b5c59f3d2295944f934aee2c1156012a3306d5d","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"fc5dda52cfbb10e27e2471e03f4606fb3d588225","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1487648671000},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"1998f207541a2590a5624549f96c5e65d136690a","modified":1487648671000},{"_id":"public/atom.xml","hash":"de6e63460f906ac8b5023c43fe6bb5c94698b3f9","modified":1487732858248},{"_id":"public/sitemap.xml","hash":"62f36219ebb69cef7905edfd197e9a2273a31f3b","modified":1487732858250},{"_id":"public/2017/02/21/多个电脑共同维护一个hexo的方法/index.html","hash":"4c459dfd09ee552d3d6126d594a16f1e54322380","modified":1487732858253},{"_id":"public/2017/02/21/Git打Tag的命令/index.html","hash":"055679ae81f08f149442a8cbb41fe0a9429407d6","modified":1487732858253},{"_id":"public/2017/02/21/hello-world/index.html","hash":"9bcc4945c466077580d4773de61d33c0149ce3ca","modified":1487732858253},{"_id":"public/archives/index.html","hash":"84573abab3fc950f4881bdbb0024f619022bc732","modified":1487732858253},{"_id":"public/index.html","hash":"a9db947bd4db9aa0d3bf6d3c8785fda30287e12b","modified":1487732858254},{"_id":"public/tags/git/index.html","hash":"6a6dbdb8ee29f3ca4383f8021a62b5dcfe5eed36","modified":1487732858254},{"_id":"public/tags/hexo/index.html","hash":"8fe29aadea6bb3a8de03b65b5197fa9a643470ee","modified":1487732858254},{"_id":"public/2017/02/22/使用Flask－Mail发送qq邮件/index.html","hash":"80712c78da7b3a78e4a1d4fcb0826507e88b8198","modified":1487732858260},{"_id":"public/tags/flask/index.html","hash":"ee65a1e9e2ecc394eaef29861735c69f5da68380","modified":1487732858260},{"_id":"public/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1487732858356},{"_id":"public/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1487732858357},{"_id":"public/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1487732858357},{"_id":"public/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1487732858714},{"_id":"public/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1487732858715}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"使用Flask－Mail发送qq邮件","date":"2017-02-22T03:05:36.000Z","_content":"\nhttp://www.jianshu.com/p/32e2f82a63c3\n\n废话不多说，直接上代码：\n\nfrom flask import Flaskfrom\n\nflask_mail import Mail, Message\n\napp = Flask(__name__)\n\napp.config.update(   \n\n      #EMAIL SETTINGS   \n\n     MAIL_SERVER='smtp.qq.com',   \n\n     MAIL_PORT=465,  \n\n     MAIL_USE_SSL=True,  \n\n    MAIL_USERNAME = 'qq号(如：123456)',  \n\n     MAIL_PASSWORD = 'qq邮箱授权码'    )\n\n\n\n\n\n\nmail = Mail(app)\n\n@app.route(\"/\")\n\ndef index():   \n\n     msg = Message(subject=\"helloworld\", sender='发送邮箱地址(如：123456@qq.com)', recipients=['接受邮箱地址(如：654321@qq.com)'])    \n\n     msg.html = \"testinghtml\"   \n\n     mail.send(msg)   \n\n\n\nif__name__ =='__main__':\n\n    app.run(debug=True)\n","source":"_posts/使用Flask－Mail发送qq邮件.md","raw":"---\ntitle: 使用Flask－Mail发送qq邮件\ndate: 2017-02-22 11:05:36\ntags: flask\n---\n\nhttp://www.jianshu.com/p/32e2f82a63c3\n\n废话不多说，直接上代码：\n\nfrom flask import Flaskfrom\n\nflask_mail import Mail, Message\n\napp = Flask(__name__)\n\napp.config.update(   \n\n      #EMAIL SETTINGS   \n\n     MAIL_SERVER='smtp.qq.com',   \n\n     MAIL_PORT=465,  \n\n     MAIL_USE_SSL=True,  \n\n    MAIL_USERNAME = 'qq号(如：123456)',  \n\n     MAIL_PASSWORD = 'qq邮箱授权码'    )\n\n\n\n\n\n\nmail = Mail(app)\n\n@app.route(\"/\")\n\ndef index():   \n\n     msg = Message(subject=\"helloworld\", sender='发送邮箱地址(如：123456@qq.com)', recipients=['接受邮箱地址(如：654321@qq.com)'])    \n\n     msg.html = \"testinghtml\"   \n\n     mail.send(msg)   \n\n\n\nif__name__ =='__main__':\n\n    app.run(debug=True)\n","slug":"使用Flask－Mail发送qq邮件","published":1,"updated":"2017-02-22T03:06:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizgdq85w0000bydi46l4dq5p","content":"<p><a href=\"http://www.jianshu.com/p/32e2f82a63c3\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/32e2f82a63c3</a></p>\n<p>废话不多说，直接上代码：</p>\n<p>from flask import Flaskfrom</p>\n<p>flask_mail import Mail, Message</p>\n<p>app = Flask(<strong>name</strong>)</p>\n<p>app.config.update(   </p>\n<pre><code>  #EMAIL SETTINGS   \n\n MAIL_SERVER=&apos;smtp.qq.com&apos;,   \n\n MAIL_PORT=465,  \n\n MAIL_USE_SSL=True,  \n\nMAIL_USERNAME = &apos;qq号(如：123456)&apos;,  \n\n MAIL_PASSWORD = &apos;qq邮箱授权码&apos;    )\n</code></pre><p>mail = Mail(app)</p>\n<p>@app.route(“/“)</p>\n<p>def index():   </p>\n<pre><code>msg = Message(subject=&quot;helloworld&quot;, sender=&apos;发送邮箱地址(如：123456@qq.com)&apos;, recipients=[&apos;接受邮箱地址(如：654321@qq.com)&apos;])    \n\nmsg.html = &quot;testinghtml&quot;   \n\nmail.send(msg)   \n</code></pre><p>if<strong>name</strong> ==’<strong>main</strong>‘:</p>\n<pre><code>app.run(debug=True)\n</code></pre>","excerpt":"","more":"<p><a href=\"http://www.jianshu.com/p/32e2f82a63c3\">http://www.jianshu.com/p/32e2f82a63c3</a></p>\n<p>废话不多说，直接上代码：</p>\n<p>from flask import Flaskfrom</p>\n<p>flask_mail import Mail, Message</p>\n<p>app = Flask(<strong>name</strong>)</p>\n<p>app.config.update(   </p>\n<pre><code>  #EMAIL SETTINGS   \n\n MAIL_SERVER=&apos;smtp.qq.com&apos;,   \n\n MAIL_PORT=465,  \n\n MAIL_USE_SSL=True,  \n\nMAIL_USERNAME = &apos;qq号(如：123456)&apos;,  \n\n MAIL_PASSWORD = &apos;qq邮箱授权码&apos;    )\n</code></pre><p>mail = Mail(app)</p>\n<p>@app.route(“/“)</p>\n<p>def index():   </p>\n<pre><code>msg = Message(subject=&quot;helloworld&quot;, sender=&apos;发送邮箱地址(如：123456@qq.com)&apos;, recipients=[&apos;接受邮箱地址(如：654321@qq.com)&apos;])    \n\nmsg.html = &quot;testinghtml&quot;   \n\nmail.send(msg)   \n</code></pre><p>if<strong>name</strong> ==’<strong>main</strong>‘:</p>\n<pre><code>app.run(debug=True)\n</code></pre>"},{"title":"Git打Tag的命令","date":"2017-02-21T05:55:46.000Z","_content":"1.打开Git命令行；\n2.切换到你要打tag的分支上去，并输入如下示例语句：git tag -a V0.5 -m\"描述信息：V0.5版本\"；\n3.输入命令行：git push origin V0.5 ，此处的\"V0.5\"与上面语句中的\"V0.5\"要一致，否则是无效的；\n4.打开gitlab查看tag信息，点开就能看到你打的tag信息了！\n","source":"_posts/Git打Tag的命令.md","raw":"---\ntitle: Git打Tag的命令\ndate: 2017-02-21 13:55:46\ntags: git\n---\n1.打开Git命令行；\n2.切换到你要打tag的分支上去，并输入如下示例语句：git tag -a V0.5 -m\"描述信息：V0.5版本\"；\n3.输入命令行：git push origin V0.5 ，此处的\"V0.5\"与上面语句中的\"V0.5\"要一致，否则是无效的；\n4.打开gitlab查看tag信息，点开就能看到你打的tag信息了！\n","slug":"Git打Tag的命令","published":1,"updated":"2017-02-21T06:22:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizgdq8620001bydi2mhgjcxh","content":"<p>1.打开Git命令行；<br>2.切换到你要打tag的分支上去，并输入如下示例语句：git tag -a V0.5 -m”描述信息：V0.5版本”；<br>3.输入命令行：git push origin V0.5 ，此处的”V0.5”与上面语句中的”V0.5”要一致，否则是无效的；<br>4.打开gitlab查看tag信息，点开就能看到你打的tag信息了！</p>\n","excerpt":"","more":"<p>1.打开Git命令行；<br>2.切换到你要打tag的分支上去，并输入如下示例语句：git tag -a V0.5 -m”描述信息：V0.5版本”；<br>3.输入命令行：git push origin V0.5 ，此处的”V0.5”与上面语句中的”V0.5”要一致，否则是无效的；<br>4.打开gitlab查看tag信息，点开就能看到你打的tag信息了！</p>\n"},{"title":"多个电脑共同维护一个hexo的方法","date":"2017-02-21T06:08:45.000Z","_content":"> 作者：CrazyMilk\n  链接：https://www.zhihu.com/question/21193762/answer/79109280\n  来源：知乎\n  著作权归作者所有，转载请联系作者获得授权。\n\n# 一、关于搭建的流程\n\n1. 创建仓库，http://CrazyMilk.github.io；\n2. 创建两个分支：master 与 hexo；\n3. 设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n4. 使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库；\n5. 在本地http://CrazyMilk.github.io文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;\n6. 修改_config.yml中的deploy参数，分支应为master；\n7. 依次执行git add .、git commit -m \"...\"、git push origin hexo提交网站相关的文件；\n8. 执行hexo g -d生成网站并部署到GitHub上。\n\n这样一来，在GitHub上的http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！\n\n# 二、关于日常的改动流程\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。\n\n1. 依次执行git add .、git commit -m \"...\"、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；\n2. 然后才执行hexo g -d发布网站到master分支上。\n\n虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催....的情况，调转顺序就有问题了）。\n\n# 三、本地资料丢失后的流程\n当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. 使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库（默认分支为hexo）；\n2. 在本地新拷贝的http://CrazyMilk.github.io文件夹下通过Git bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。\n","source":"_posts/多个电脑共同维护一个hexo的方法.md","raw":"---\ntitle: 多个电脑共同维护一个hexo的方法\ndate: 2017-02-21 14:08:45\ntags: hexo\n---\n> 作者：CrazyMilk\n  链接：https://www.zhihu.com/question/21193762/answer/79109280\n  来源：知乎\n  著作权归作者所有，转载请联系作者获得授权。\n\n# 一、关于搭建的流程\n\n1. 创建仓库，http://CrazyMilk.github.io；\n2. 创建两个分支：master 与 hexo；\n3. 设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n4. 使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库；\n5. 在本地http://CrazyMilk.github.io文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;\n6. 修改_config.yml中的deploy参数，分支应为master；\n7. 依次执行git add .、git commit -m \"...\"、git push origin hexo提交网站相关的文件；\n8. 执行hexo g -d生成网站并部署到GitHub上。\n\n这样一来，在GitHub上的http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美( •̀ ω •́ )y！\n\n# 二、关于日常的改动流程\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。\n\n1. 依次执行git add .、git commit -m \"...\"、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；\n2. 然后才执行hexo g -d发布网站到master分支上。\n\n虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催....的情况，调转顺序就有问题了）。\n\n# 三、本地资料丢失后的流程\n当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. 使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库（默认分支为hexo）；\n2. 在本地新拷贝的http://CrazyMilk.github.io文件夹下通过Git bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。\n","slug":"多个电脑共同维护一个hexo的方法","published":1,"updated":"2017-02-21T06:32:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizgdq86u0006bydi0fxeeemn","content":"<blockquote>\n<p>作者：CrazyMilk<br>  链接：<a href=\"https://www.zhihu.com/question/21193762/answer/79109280\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/21193762/answer/79109280</a><br>  来源：知乎<br>  著作权归作者所有，转载请联系作者获得授权。</p>\n</blockquote>\n<h1 id=\"一、关于搭建的流程\"><a href=\"#一、关于搭建的流程\" class=\"headerlink\" title=\"一、关于搭建的流程\"></a>一、关于搭建的流程</h1><ol>\n<li>创建仓库，<a href=\"http://CrazyMilk.github.io；\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io；</a></li>\n<li>创建两个分支：master 与 hexo；</li>\n<li>设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li>使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库；</li>\n<li>在本地<a href=\"http://CrazyMilk.github.io文件夹下通过Git\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;</li>\n<li>修改_config.yml中的deploy参数，分支应为master；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件；</li>\n<li>执行hexo g -d生成网站并部署到GitHub上。</li>\n</ol>\n<p>这样一来，在GitHub上的<a href=\"http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(</a> •̀ ω •́ )y！</p>\n<h1 id=\"二、关于日常的改动流程\"><a href=\"#二、关于日常的改动流程\" class=\"headerlink\" title=\"二、关于日常的改动流程\"></a>二、关于日常的改动流程</h1><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p>\n<ol>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；</li>\n<li>然后才执行hexo g -d发布网站到master分支上。</li>\n</ol>\n<p>虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</p>\n<h1 id=\"三、本地资料丢失后的流程\"><a href=\"#三、本地资料丢失后的流程\" class=\"headerlink\" title=\"三、本地资料丢失后的流程\"></a>三、本地资料丢失后的流程</h1><p>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li>使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库（默认分支为hexo）；</li>\n<li>在本地新拷贝的<a href=\"http://CrazyMilk.github.io文件夹下通过Git\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。</li>\n</ol>\n","excerpt":"","more":"<blockquote>\n<p>作者：CrazyMilk<br>  链接：<a href=\"https://www.zhihu.com/question/21193762/answer/79109280\">https://www.zhihu.com/question/21193762/answer/79109280</a><br>  来源：知乎<br>  著作权归作者所有，转载请联系作者获得授权。</p>\n</blockquote>\n<h1 id=\"一、关于搭建的流程\"><a href=\"#一、关于搭建的流程\" class=\"headerlink\" title=\"一、关于搭建的流程\"></a>一、关于搭建的流程</h1><ol>\n<li>创建仓库，<a href=\"http://CrazyMilk.github.io；\">http://CrazyMilk.github.io；</a></li>\n<li>创建两个分支：master 与 hexo；</li>\n<li>设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li>使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库；</li>\n<li>在本地<a href=\"http://CrazyMilk.github.io文件夹下通过Git\">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;</li>\n<li>修改_config.yml中的deploy参数，分支应为master；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件；</li>\n<li>执行hexo g -d生成网站并部署到GitHub上。</li>\n</ol>\n<p>这样一来，在GitHub上的<a href=\"http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(\">http://CrazyMilk.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。完美(</a> •̀ ω •́ )y！</p>\n<h1 id=\"二、关于日常的改动流程\"><a href=\"#二、关于日常的改动流程\" class=\"headerlink\" title=\"二、关于日常的改动流程\"></a>二、关于日常的改动流程</h1><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p>\n<ol>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；</li>\n<li>然后才执行hexo g -d发布网站到master分支上。</li>\n</ol>\n<p>虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</p>\n<h1 id=\"三、本地资料丢失后的流程\"><a href=\"#三、本地资料丢失后的流程\" class=\"headerlink\" title=\"三、本地资料丢失后的流程\"></a>三、本地资料丢失后的流程</h1><p>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li>使用git clone git@github.com:CrazyMilk/CrazyMilk.github.io.git拷贝仓库（默认分支为hexo）；</li>\n<li>在本地新拷贝的<a href=\"http://CrazyMilk.github.io文件夹下通过Git\">http://CrazyMilk.github.io文件夹下通过Git</a> bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）。</li>\n</ol>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-02-21T03:44:31.000Z","updated":"2017-02-21T03:44:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizgdq86v0007bydi7t4xgwkr","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cizgdq85w0000bydi46l4dq5p","tag_id":"cizgdq8650002bydiebk0t1l2","_id":"cizgdq8680004bydimz89cexk"},{"post_id":"cizgdq8620001bydi2mhgjcxh","tag_id":"cizgdq8670003bydidbgncdcj","_id":"cizgdq8690005bydi53hbdeib"},{"post_id":"cizgdq86u0006bydi0fxeeemn","tag_id":"cizgdq86z0008bydit7d7f4p6","_id":"cizgdq8700009bydi0olfhqj8"}],"Tag":[{"name":"flask","_id":"cizgdq8650002bydiebk0t1l2"},{"name":"git","_id":"cizgdq8670003bydidbgncdcj"},{"name":"hexo","_id":"cizgdq86z0008bydit7d7f4p6"}]}}